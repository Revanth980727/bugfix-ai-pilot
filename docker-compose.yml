
version: '3.9'

services:
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - bugfix_network

  backend:
    build:
      context: ./backend
    ports:
      - "8000:8000"
    environment:
      - PLANNER_URL=http://planner:8001
      - DEVELOPER_URL=http://developer:8002
      - QA_URL=http://qa:8003
      - COMMUNICATOR_URL=http://communicator:8004
    env_file:
      - ./.env
    volumes:
      - ./logs:/app/logs
      - ./code_repo:/app/code_repo
    depends_on:
      - planner
      - developer
      - qa
      - communicator
    networks:
      - bugfix_network

  planner:
    build:
      context: ./agents/planner
    ports:
      - "8001:8001"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    env_file:
      - ./.env
    volumes:
      - ./code_repo:/app/code_repo
      - ./logs:/app/logs/planner
    networks:
      - bugfix_network

  developer:
    build:
      context: ./agents/developer
    ports:
      - "8002:8002"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    env_file:
      - ./.env
    volumes:
      - ./code_repo:/app/code_repo
      - ./logs:/app/logs/developer
    networks:
      - bugfix_network

  qa:
    build:
      context: ./agents/qa
    ports:
      - "8003:8003"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TEST_COMMAND=${TEST_COMMAND:-pytest}
    env_file:
      - ./.env
    volumes:
      - ./code_repo:/app/code_repo
      - ./logs:/app/logs/qa
    networks:
      - bugfix_network

  communicator:
    build:
      context: ./agents/communicator
    ports:
      - "8004:8004"
    environment:
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_REPO_OWNER=${GITHUB_REPO_OWNER}
      - GITHUB_REPO_NAME=${GITHUB_REPO_NAME}
      - GITHUB_DEFAULT_BRANCH=${GITHUB_DEFAULT_BRANCH:-main}
      - JIRA_TOKEN=${JIRA_TOKEN}
      - JIRA_USER=${JIRA_USER}
      - JIRA_URL=${JIRA_URL}
      - EMAIL_HOST=${EMAIL_HOST:-""}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_USER=${EMAIL_USER:-""}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD:-""}
      - SLACK_TOKEN=${SLACK_TOKEN:-""}
      - SLACK_CHANNEL=${SLACK_CHANNEL:-""}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    env_file:
      - ./.env
    volumes:
      - ./logs:/app/logs/communicator
      - ./backend:/app/backend
    networks:
      - bugfix_network
      
  jira_service:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: python -m jira_service.run_service
    environment:
      - JIRA_URL=${JIRA_URL}
      - JIRA_USERNAME=${JIRA_USER}
      - JIRA_API_TOKEN=${JIRA_TOKEN}
      - JIRA_PROJECT_KEY=${JIRA_PROJECT_KEY:-""}
      - JIRA_POLL_INTERVAL=${JIRA_POLL_INTERVAL:-30}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    env_file:
      - ./.env
    volumes:
      - ./logs:/app/logs/jira_service
    networks:
      - bugfix_network
    restart: unless-stopped

networks:
  bugfix_network:

volumes:
  code_repo:
  logs:
